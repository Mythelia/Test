package fr.formation.inti.entities;
// Generated 8 avr. 2019 14:51:15 by Hibernate Tools 5.1.10.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name = "employee", catalog = "bd2", uniqueConstraints = @UniqueConstraint(columnNames = "EMP_NO"))
public class Employee implements java.io.Serializable {

	private long empId;
	private Department department;
	private Employee employee;
	private String empName;
	private String empNo;
	private Date hireDate;
	private byte[] image;
	private String job;
	private float salary;
	private Set<Employee> employees = new HashSet<Employee>(0);
	private Set<Timekeeper> timekeepers = new HashSet<Timekeeper>(0);

	public Employee() {
	}

	public Employee(long empId, String empName, String empNo, Date hireDate, String job, float salary) {
		this.empId = empId;
		this.empName = empName;
		this.empNo = empNo;
		this.hireDate = hireDate;
		this.job = job;
		this.salary = salary;
	}

	public Employee(long empId, Department department, Employee employee, String empName, String empNo, Date hireDate,
			byte[] image, String job, float salary, Set<Employee> employees, Set<Timekeeper> timekeepers) {
		this.empId = empId;
		this.department = department;
		this.employee = employee;
		this.empName = empName;
		this.empNo = empNo;
		this.hireDate = hireDate;
		this.image = image;
		this.job = job;
		this.salary = salary;
		this.employees = employees;
		this.timekeepers = timekeepers;
	}

	@Id
	@Column(name = "EMP_ID", unique = true, nullable = false)
	public long getEmpId() {
		return this.empId;
	}

	public void setEmpId(long empId) {
		this.empId = empId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DEPT_ID")
	public Department getDepartment() {
		return this.department;
	}

	public void setDepartment(Department department) {
		this.department = department;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MNG_ID")
	public Employee getEmployee() {
		return this.employee;
	}

	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	@Column(name = "EMP_NAME", nullable = false, length = 50)
	public String getEmpName() {
		return this.empName;
	}

	public void setEmpName(String empName) {
		this.empName = empName;
	}

	@Column(name = "EMP_NO", unique = true, nullable = false, length = 20)
	public String getEmpNo() {
		return this.empNo;
	}

	public void setEmpNo(String empNo) {
		this.empNo = empNo;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "HIRE_DATE", nullable = false, length = 10)
	public Date getHireDate() {
		return this.hireDate;
	}

	public void setHireDate(Date hireDate) {
		this.hireDate = hireDate;
	}

	@Column(name = "IMAGE")
	public byte[] getImage() {
		return this.image;
	}

	public void setImage(byte[] image) {
		this.image = image;
	}

	@Column(name = "JOB", nullable = false, length = 30)
	public String getJob() {
		return this.job;
	}

	public void setJob(String job) {
		this.job = job;
	}

	@Column(name = "SALARY", nullable = false, precision = 12, scale = 0)
	public float getSalary() {
		return this.salary;
	}

	public void setSalary(float salary) {
		this.salary = salary;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<Employee> getEmployees() {
		return this.employees;
	}

	public void setEmployees(Set<Employee> employees) {
		this.employees = employees;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<Timekeeper> getTimekeepers() {
		return this.timekeepers;
	}

	public void setTimekeepers(Set<Timekeeper> timekeepers) {
		this.timekeepers = timekeepers;
	}

	@Override
	public String toString() {
		return "Employee [empId=" + empId + ", empName=" + empName + ", empNo=" + empNo + ", salary=" + salary + "]";
	}

	
	

}
